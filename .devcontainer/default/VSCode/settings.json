// Note: There are some additional constraints on workspace settings because of how we test the configuration is valid. See `.devcontainer/test-container.sh` for details
{
  // CMake Settings
  "cmake.sourceDirectory": "${workspaceFolder}/circt/llvm/llvm",
  "cmake.buildDirectory": "${workspaceFolder}/circt/build/circt",
  "cmake.installPrefix": "/usr/local/bin",
  "cmake.configureOnOpen": true,
  "cmake.configureOnEdit": false,
  "cmake.generator": "Ninja",
  "cmake.configureArgs": [
    // CMAKE
    "-DCMAKE_C_COMPILER_LAUNCHER=ccache",
    "-DCMAKE_CXX_COMPILER_LAUNCHER=ccache",
    // LLVM
    "-DLLVM_ENABLE_ASSERTIONS=ON",
    "-DLLVM_ENABLE_PROJECTS=mlir",
    "-DLLVM_TARGETS_TO_BUILD=",
    "-DLLVM_BUILD_EXAMPLES=OFF",
    "-DLLVM_ENABLE_OCAMLDOC=OFF",
    "-DLLVM_ENABLE_BINDINGS=OFF",
    "-DLLVM_ENABLE_MODULES=OFF",
    // LLVM (performance)
    "-DLLVM_OPTIMIZED_TABLEGEN=OFF", // Not compatible with disabling LLHD
    "-DLLVM_USE_SPLIT_DWARF=OFF", // Not compatible with Swift
    // CIRCT 
    "-DLLVM_EXTERNAL_PROJECTS=circt;circel",
    "-DLLVM_EXTERNAL_CIRCT_SOURCE_DIR=${workspaceFolder}/circt",
    "-DLLVM_EXTERNAL_CIRCEL_SOURCE_DIR=${workspaceFolder}/circel",
    "-DCIRCT_LLHD_SIM_ENABLED=OFF" // Not compatible with not building an LLVM target
  ],
  // Clangd Settings
  "clangd.path": "clangd-16",
  "clangd.checkUpdates": false,
  "clangd.onConfigChanged": "restart",
  "clangd.arguments": [
    "--compile-commands-dir=${workspaceFolder}/circt/build/circt"
  ],
  // MLIR Extension Settings (requires building the `install-circel-lsp-server` project)
  "mlir.server_path": "/usr/local/bin/circel-lsp-server",
  "mlir.onSettingsChanged": "restart",
  // Java
  "files.watcherExclude": {
    "**/target": true
  },
  "remote.autoForwardPorts": false, // Metals opens some ports in the remote container that we don't need to forward to the host
  // Workspace Settings
  "files.exclude": {
    // Other Editors
    ".vim": true,
    // Scala
    "**/target": true,
    ".metals": true,
    // Exclude all llvm projects except for llvm and mlir (this is a bit convoluted because VSCode doesn't support negated glob patterns)
    "circt/llvm/[^lm]*": true,
    "circt/llvm/l[^l]*": true,
    "circt/llvm/ll[^v]*": true,
    "circt/llvm/llvm-*": true,
    // Exclude some CIRCT noise
    "circt/.*": true
  },
  "search.exclude": {
    "build": true
  },
  // SourceKit (don't conflict with CMake Tools)
  "sourcekit-lsp.supported-languages": [
    "swift",
    "objective-c",
    "objective-cpp"
  ],
  // LLDB
  "lldb.library": "/swift/usr/lib/liblldb.so",
  "lldb.launch.expressions": "native"
}