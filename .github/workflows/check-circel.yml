name: Check CIRCEL

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  check-circel:
    name: Check CIRCEL
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        devcontainer-name: ["circel"]
        additional-cmake-flags:
          - 
            - -DLLVM_OPTIMIZED_TABLEGEN=OFF
            - -DLLVM_TARGETS_TO_BUILD=

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Make devcontainer '${{ matrix.devcontainer-name }}' singular
        run: .devcontainer/devcontainer-helper --make-singular ${{ matrix.devcontainer-name }}

      - name: Initialize devcontainer
        uses: devcontainers/ci@v0.3.1900000329
        with:
          push: never
          runCmd: |
            echo "Done."

      - name: Get cache key parts
        uses: devcontainers/ci@v0.3.1900000329
        with:
          push: never
          runCmd: |
            env
            LLVM_HASH=$(find /llvm -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum | cut -d' ' -f1)
            echo $LLVM_HASH
            echo $LLVM_HASH > .llvm-hash
            echo "llvm-hash=$LLVM_HASH" >> $GITHUB_OUTPUT
            CIRCT_HASH=$(find /circt -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum | cut -d' ' -f1)
            echo $CIRCT_HASH
            echo $CIRCT_HASH > .circt-hash
            echo "circt-hash=$CIRCT_HASH" >> $GITHUB_OUTPUT
            . /etc/lsb-release
            echo $DISTRIB > .ubuntu-codename
            echo $DISTRIB_CODENAME
            echo "ubuntu-codename=$DISTRIB_CODENAME" >> $GITHUB_OUTPUT

      - name: Export cache key parts
        id: get-cache-key-parts
        run: |
          cat .llvm-hash .circt-hash .ubuntu-codename
          echo "llvm-hash=$(cat .llvm-hash)" >> $GITHUB_OUTPUT
          echo "circt-hash=$(cat .circt-hash)" >> $GITHUB_OUTPUT
          echo "ubuntu-codename=$(cat .ubuntu-codename)" >> $GITHUB_OUTPUT
          rm .llvm-hash .circt-hash .ubuntu-codename

      - name: Get output from previous step
        run: |
          echo ${{ steps.get-cache-key-parts.outputs.ubuntu-codename }}
          echo ${{ steps.get-cache-key-parts.outputs.llvm-hash }}
          echo ${{ steps.get-cache-key-parts.outputs.circt-hash }}
        
      - name: Restore ccache database
        uses: actions/cache/restore@v3
        with: 
          path: ccache
          key: circel-ccache-database-${{ steps.get-cache-key-parts.outputs.ubuntu-codename }}-${{ steps.get-cache-key-parts.outputs.llvm-hash }}-${{ steps.get-cache-key-parts.outputs.circt-hash }}-${{ hashFiles('.devcontainer/**') }}-${{ hashFiles('circel-core/**') }}
          restore-keys: |
            circel-ccache-database-${{ steps.get-cache-key-parts.outputs.ubuntu-codename }}-${{ steps.get-cache-key-parts.outputs.llvm-hash }}-${{ steps.get-cache-key-parts.outputs.circt-hash }}-${{ hashFiles('.devcontainer/**') }}-
            circel-ccache-database-${{ steps.get-cache-key-parts.outputs.ubuntu-codename }}-${{ steps.get-cache-key-parts.outputs.llvm-hash }}-${{ steps.get-cache-key-parts.outputs.circt-hash }}-
            circel-ccache-database-${{ steps.get-cache-key-parts.outputs.ubuntu-codename }}-${{ steps.get-cache-key-parts.outputs.llvm-hash }}-
            circel-ccache-database-${{ steps.get-cache-key-parts.outputs.ubuntu-codename }}
      
      - name: Initialize ccache
        uses: devcontainers/ci@v0.3.1900000329
        with:
          # We configure ccache to not evict anything during compilation, and we perform a cleanup after compilation completes
          push: never
          runCmd: |
            date +%s > .workflow-start-seconds
            export CCACHE_DIR=$PWD/ccache
            ccache -M 1600GB
            ccache -sv
            ccache -z

      - name: Configure CMake Project
        uses: devcontainers/ci@v0.3.1900000329
        with:
          push: never
          runCmd: |
            exit 1
            export CCACHE_DIR=$PWD/ccache
            git config --global --add safe.directory $PWD
            ./circel/support/cmake-helper configure ${{ join(matrix.additional-cmake-flags, ' ') }}

      # We run the build, once to check the targets and once to log the errors without any progress logs cluttering the output (since it is a trivial incremental build). Please take care to make sure the following two steps stay in sync.
      - name: Check targets
        id: check-targets
        uses: devcontainers/ci@v0.3.1900000329
        with:
          push: never
          runCmd: |
            export CCACHE_DIR=$PWD/ccache
            git config --global --add safe.directory $PWD
            ./circel/support/cmake-helper build
            ./circel/support/cmake-helper test

      - name: Log errors in a separate task
        if: failure() && steps.check-targets.outcome == 'failure'
        uses: devcontainers/ci@v0.3.1900000329
        with:
          push: never
          runCmd: |
            export CCACHE_DIR=$PWD/ccache
            git config --global --add safe.directory $PWD
            ./circel/support/cmake-helper build
            ./circel/support/cmake-helper test

      - name: Clean up ccache
        uses: devcontainers/ci@v0.3.1900000329
        with:
          push: never
          runCmd: |
            export CCACHE_DIR=$PWD/ccache
            ccache -sv
            ccache -M 1GB
            ccache --cleanup
            ccache -sv
      # Save the cache prior to pruning it
      - name: Save ccache database
        uses: actions/cache/save@v3
        if: steps.check-targets.outcome == 'success'
        with: 
          path: ccache
          key: circel-ccache-database-${{ steps.get-cache-key-parts.outputs.ubuntu-codename }}-${{ steps.get-cache-key-parts.outputs.llvm-hash }}-${{ steps.get-cache-key-parts.outputs.circt-hash }}-${{ hashFiles('.devcontainer/**') }}-${{ hashFiles('./**') }}
      # If evicting everything that wasn't used this workflow does not reduce the cache past its maximum, it may benefit performance to increase the cache size.
      - name: Log ccache estimated usage
        uses: devcontainers/ci@v0.3.1900000329
        with:
          push: never
          runCmd: |
            export CCACHE_DIR=$PWD/ccache
            ccache --evict-older-than $(($(date +%s) - $(cat .workflow-start-seconds)))s
            ccache -sv
            rm .workflow-start-seconds
      - name: Check that repository is clean
        uses: devcontainers/ci@v0.3.1900000329
        with:
          push: never
          runCmd: |
            git config --global --add safe.directory $PWD
            .devcontainer/devcontainer-helper --clean
            git diff --exit-code
